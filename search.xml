<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Mysql index.md]]></title>
    <url>%2F2017%2F11%2F22%2FMysql-index%2F</url>
    <content type="text"><![CDATA[MySQL Index慢查询不完全优化过程： 使用explain 获取SQL执行情况,检查项 1、表设计，字符和数字字段的定义，字符集大小写校验，时间字段存储 2、驱动表：多表join时候最优的连接顺序(小表驱动大表 优化器NLP的算法) 3、索引优化：索引消除排序，索引隐式转换(varchar, int 转化)，覆盖索引避免回表的问题。 4、使用explain extended获取SQL执行计划中的异常点。 (覆盖索引:在explain的extra列可以看到”using index”的信息,如果是”using where”,因为任何索引覆盖不了查询的所有列,因此这个查询还需要回表,就是根据where条件重新查询一次数据-回表, 然后返回结果) 无法覆盖索引时优化时，采用延时关联(deferred join),第一阶段可以使用覆盖索引,然后在外层查询匹配获取需要的所有列值。虽然无法使用索引覆盖整个查询，但总算比较完全无法利用索引覆盖的好。 这样优化的效果取决于1、整个数据量大 2、第一阶段就筛选了很少的结果集 建立索引的原则 1.最左前缀匹配原则。mysql会一直向右匹配直到遇到范围查询(&gt;、&lt;、between、like)就停止匹配，比如a = 1 and b = 2 and c &gt; 3 and d = 4 如果建立(a,b,c,d)顺序的索引，d是用不到索引的，如果建立(a,b,d,c)的索引则都可以用到，a,b,d的顺序可以任意调整 2.=和in可以乱序，比如a = 1 and b = 2 and c = 3 建立(a,b,c)索引可以任意顺序，mysql的查询优化器会帮你优化成索引可以识别的形式 3.选择区分度高的列作为索引 (字段的过滤性) 4.索引列不能参与计算，保持列“干净”，比如from_unixtime(create_time) = ’2014-05-29’就不能使用到索引，原因很简单，b+树中存的都是数据表中的字段值，但进行检索时，需要把所有元素都应用函数才能比较，显然成本太大。所以语句应该写成create_time = unix_timestamp(’2014-05-29’); 5.尽量的扩展索引，不要新建索引]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MongoDB]]></title>
    <url>%2F2017%2F09%2F20%2FMongoDB%2F</url>
    <content type="text"><![CDATA[MongoDB 常用语句搜索模糊搜索 db.getCollection(&#39;room_avail_log&#39;).find({&quot;request.roomAvail&quot;: /205103/}).limit(50) db.getCollection(&#39;static_info_log&#39;).find({&quot;request.hotelActionRequest&quot;: /491626.*Close/}) 倒叙输出 db.getCollection(&#39;room_price_log&#39;).find({}).sort({ $natural: -1 }).limit(10) 查看索引 db.COLLECTION_NAME.getIndexes() 删除删除日期前的数据 db.getCollection(&#39;static_info_log&#39;).deleteMany({&quot;createAt&quot;:{$lte:ISODate(&quot;2017-08-01T00:00:00Z&quot;)}}) 删除日期后的数据 db.getCollection(&#39;static_info_log&#39;).deleteMany({&quot;createAt&quot;:{$gte:ISODate(&quot;2017-08-01T00:00:00Z&quot;)}}) note : 删除无法释放硬盘资源 备份还原备份 mongodump -h host -u user -p pwd -d db --gzip --archive=/data2/backup/db 还原 mongorestore -u user -p pwd -d db --gzip --archive=/data1/backup/db 官方文档]]></content>
      <categories>
        <category>MongoDB</category>
      </categories>
      <tags>
        <tag>MongoDB</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RabbitMQ]]></title>
    <url>%2F2017%2F08%2F27%2FRabbitMQ%2F</url>
    <content type="text"><![CDATA[Split tracking logs of RabbitMQ]]></content>
      <categories>
        <category>RabbiMQ</category>
      </categories>
      <tags>
        <tag>RabbiMQ</tag>
        <tag>Concurrency</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Gitlab 500 error]]></title>
    <url>%2F2017%2F08%2F22%2FGitlab-error-500%2F</url>
    <content type="text"><![CDATA[Gitlab error 500In /var/log/gitlab/gitlab-rails/application.log 12345Completed 500 Internal Server Error in 63msNoMethodError (undefined method `reduce&apos; for false:FalseClass): app/models/commit.rb:26:in `diff_line_count&apos; app/controllers/projects/merge_requests_controller.rb:94:in `new&apos; we can find some solutions through Google.com.But sometime we need to get it from logs.Let’s look into more logs. In githost.log 123August 22, 2017 17:14 -&gt; ERROR -&gt; Command failed [128]: /opt/gitlab/embedded/bin/git --git-dir=/var/opt/gitlab/git-data/gitlab-satellites/java/project/.git checkout -b __parking_branchfatal: Not a git repository: &apos;/var/opt/gitlab/git-data/gitlab-satellites/java/project/.git&apos; It tell us that it’s not a git repository..It’s clear.And I found it’s really not a git repository.Then I fixed it. 1.Delete this project 2.ran a git clone ~/repositories/&lt;upstream_repo&gt;/&lt;repo_name&gt;.git]]></content>
      <categories>
        <category>gitlab</category>
      </categories>
      <tags>
        <tag>gitlab</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HomeBrew install plugins]]></title>
    <url>%2F2017%2F08%2F22%2FHomeBrew-install-plugins%2F</url>
    <content type="text"><![CDATA[1.Set default app in OS Xhomebrew install duti 1brew install duti get app id 1osascript -e 'id of app "$appName"' set default app 1duti -s $app-id .$file-type all]]></content>
      <categories>
        <category>homebrew</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>homebrew</tag>
      </tags>
  </entry>
</search>
